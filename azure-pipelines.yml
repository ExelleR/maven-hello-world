
# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

      

- task: Maven@3
  inputs:
    mavenPomFile: './my-app/pom.xml'
    goals: 'compile'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    sqMavenPluginVersionChoice: 'latest'

- task: Maven@3
  inputs:
    mavenPomFile: './my-app/pom.xml'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Run the compiled programm.
      java -cp /home/vsts/work/1/s/my-app/target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
      
# - task: CopyFiles@2
#   inputs:
#     SourceFolder: '/home/vsts/work/1/s/my-app'
#     Contents: '**/target/*.?(war|jar)'
#     TargetFolder: '/target'
  
# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(Build.ArtifactStagingDirectory)'
#     artifact: 'my-app-1.0-SNAPSHOT.jar'
#     publishLocation: 'pipeline'
- task: Docker@2
  inputs:
    containerRegistry: 'ilya_dockerhub'
    repository: 'exeller/alien_project'
    command: 'build'
    Dockerfile: '**/Dockerfile'
- task: Docker@2
  inputs:
    containerRegistry: 'ilya_dockerhub'
    repository: 'exeller/alien_project'
    command: 'push'

